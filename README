/**************************************************
*
*  Buildroot- twsi_tool example.   
*
***************************************************    


This is a simple buildroot project example.  The 
instructions below describe where to place the files.

I have tried to add some comments in the file to 
describe some of the components.   I am sure the
Instructions will improve after I forgot what I did
and have to figure this out again.

References:

   I. https://github.com/maximeh/buildroot/blob/master/docs/manual/adding-packages-kernel-module.txt
  II. https://stackoverflow.com/questions/19783795/how-to-add-my-own-software-to-a-buildroot-linux-package
 III. https://buildroot.org/downloads/manual/manual.html#writing-rules-mk
  VI. http://lists.busybox.net/pipermail/buildroot/2014-August/103600.html
   V. https://buildroot.org/downloads/manual/manual.html#_infrastructure_for_packages_building_kernel_modules 


== Directory Structure:

The "twsi_tool" code base will need to be installed in one of two 
locations (A or B). 
 
    (A)  places the file in the "sdk_base" directory with the rest 
         of the Marvell code base.  (My Instructions will follow "A".
         Feel Free to use "B" addif you like)
    (B)  places the file in the "buildroot" directory with the rest 
         of the buildroot code base/packages.  .
 

A) twsi_tool installed with Marvell Code

  <SDK> 
     |
     - buildroot
     |      |
     |      - package
     |      |   
     |      - <Other buildroot folders>
     |
      - sdk_base  (older sdk's called this dir: "buildroot-external-marvell")
     |      |
     |      - package
     |      |      |
     |      |      - twsi_tool   (Create here to be with Marvell Code)     
     |      |      |      |
     |      |      |      - Config.in
     |      |      |      |
     |      |      |      - twsi_tool.mk
     |      |      |      |
     |      |      |      - (optional- any files/folders you want)
     |      |      |
     |      |      - <Other Marvell based OpenWRT Packages>     
     |      |      |
     |      |      v 
     |      - <Other sdk_base folders>
     |
     - "output" and other sdk folders
     |  
     v


B) twsi_tool installed in the buildroot directory with the buildroot code. 

  <SDK> 
     |
     - buildroot
     |      |
     |      - package
     |      |      |
     |      |      - twsi_tool    (Create here to be with Buildroot Code)  
     |      |      |      |
     |      |      |      - Config.in
     |      |      |      |
     |      |      |      - twsi_tool.mk
     |      |      |      |
     |      |      |      - (optional- any files/folders you want)
     |      |      |
     |      |      - <Other standard OpenWRT Packages>     
     |      |      |
     |      |      v 
     |      |   
     |      - <Other buildroot folders>
     |
      - sdk_base   (older sdk's called this dir: "buildroot-external-marvell")
     |      |
     |      - package
     |      |      |
     |      |      - <Other Marvell based OpenWRT Packages>     
     |      |      |
     |      |      v 
     |      - <Other sdk_base folders>
     |
     - "output" and other sdk folders
     |  
     v




== File Info:

    "Config.in" -> used by Buildroot's "make menuconfig" command to 
      place entries in the menu. By default, the twsi_tool package 
      is not included by default. (equivalent to Kconfig in linux kernel) 

    "twsi_tool.mk" -> Tells buildroot
        a) where to find the package source code 
        b) what mechanism to download/fetch 
        c) how/when to build/compile the package
        d) where the resulting executible should be placed in the 
              target System.


== Files from Github

     - twsi_tool
     |      |
     |      - twsi_tool.c
     |      |
     |      - Makefile 
     |      |  
     |      - README  (This file)
     |      |  
     |      - x     (bash file to create twsi_tool-<REVISION>.tgz
     |      |  
     |      - package 
     |             | 
     |             - twsi_tool.mk
     |             | 
     |             - Config.in
     |      
     |      - helpers
     |             | 
     |             - k -> A bash script. Should be placed in the buildroot
     |                     <output> directory.  Does a clean removal of 
     |                     any cached components of the "package", such 
     |                     that when you run "make twsi_tool", the sources
     |                     tar file will be re-downloaded from the source. 
     |             | 
     |             - Trans -> a bash script which can be run from anywhere.
     |                        The script deletes the package in the buildroot
     |                        directory, and then updates the Config.in and 
     |                        twsi_tool.mk from Github. Useful when testing
     |                        changes to the .mk file. 
     |             | 


 
=> Comments on my implementation:

    1) Buildroot can download a package via multiple mechanisms.
       a) I have configured twsi_tool.mk to get the "twsi_tool.tgz"
            source code from my web server on Hooch (10.11.65.84:80)

          from twsi_tool.mk:
            TWSI_TOOL_SITE_METHOD = wget
            TWSI_TOOL_SITE = root@10.11.65.84:80

       b) The "twsi_tool.mk" also has lines commented out which will
          fetch the "twsi_tool.tgz" from a local directory on the
          build machine. The locaion I have specified in "twsi_tool.mk"
          is:
             /scratch/twsi_tool/twsi_tool.tgz

          from twsi_tool.mk:
            #TWSI_TOOL_SITE_METHOD = file
            #TWSI_TOOL_SITE = /scratch/twsi_tool

       c) you can also fetch project source via wget, http, or scp.

       d) WARNING:  buildroot will add "/" for you as part of the
           target/"TWSI_TOOL_SITE"  location.

       e) WARNING: Buildroot will by default strip the first
           "path directory" in your .tgz file.  My .mk file overrides this
           to not strip any directory path.

          from twsi_tool.mk:
            TWSI_TOOL_STRIP_COMPONENTS=0

    2) I set up a Github progject that you "clone" to a working directory.  
         From there, you must manually copy project files to the proper 
         location in buildroot.  Additionally you must modify buildroot's 
         make and configure files to have the twsi_tool package build as 
         part of calliing make.   
         
    3) <REVISION> of the package is defined in twsi_tool.mk


=> Get the files
   1)  get the twsi_tool package from Github, place the source in the top 
       level directory "/scratch"
   
   mkdir -p /scratch
   cd /scratch
   git clone https://github.com/fmcoastal/buildroot_twsi_tool.git  twsi_tool

   2) the files and file structure should look like what is shown above. 

   3) build the source tar file required by build root for package source files. 
       the script "x" will put the contentes of the twsi_tool directory into 
       a .tgz file in a format which buildroot will later explode into the 
       directory  <sdk>/<output>/build/twsi_tool-1.0.0  when Make is run.
   
       cd /scratch/twsi_tool
       ./x
   3.1) put the resulting .tgz file in the location specified in the 
       "package/twsi_tool.mk" location.  Recall from above that I am using 
       a http server for buildroot to fetch from.  (you can use a local directory)

       scp /scratch/twsi_tool/twsi_tool-1.0.0.tgz   root@10.11.65.84:/var/www/html/.
    

=> Configure buildroot  - manual Placement
    
    4) Determine which package location you want to install the
         twsi_tool package in.  For me, I will use the
         <SDK>/buildroot-external-marvell/package location.  
        (You could also place it in <SDK>/buildroot/package location)

    5) cd buildroot or buildroot-external

    cd  /sdk/<SDK>/buildroot-external-marvell/package

    6) Make a directory twsi_tool

    mkdir -p twsi_tool

    7) copy Config.in and twsi_tool.mk from your git download
       to your

    cd twsi_tool
    cp /scratch/twsi_tool/package/Config.in .
    cp /scratch/twsi_tool/package/twsi_tool.mk .
 
    8) Modify <sdk>/buildroot-external-marvell/Config.in to have it look in
       the packages/twsi_tool directory for a Config.in file

       add the following to the last line in the "<sdk>/buildroot-external
       -marvell/Config.in" file

       source "$BR2_EXTERNAL_MARVELL_SDK_PATH/package/twsi_tool/Config.in"
    

    9) (REFERENCE) the <sdk>/buildroot-external-marvell/external.mk is written to 
       walk through each directory in the Package file and look for a .mk file when 
       the "make" is executed in the <output> directory.
 
       The twsi_tool.mk file tells build root about revision info, where to 
       find source code, how to unpack source code. In addition, the are multiple
       other defines which can be implemented to support the install process. Look 
       specifically at 
       
        https://buildroot.org/downloads/manual/manual.html#writing-rules-mk
        and 
        https://buildroot.org/downloads/manual/manual.html#hooks


     10) if everything is configured correctly, you should be able to execute 
        "make twsi_tool" in your <output> dirctory.  Buildroot will:
            create the folling directory:  "<output>/build/twsi_tool-1.0.0"  
         the folder will have:
               I.  your source code in it. 
              II.  the compiled output.  (twsi_tool)
             III.  and if you rebuild your rootfs, a copy of the "twsi_tool" executible
                   will be in the /bin directory. 
       
         transfer the executable to your target, and run twsi_tool!

